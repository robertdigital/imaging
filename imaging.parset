# Control of the imaging script
msin = [/home/jswinban/pipeline/L40022_SAP002_SB200_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB201_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB202_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB203_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB204_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB205_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB206_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB207_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB208_uv.MS, /home/jswinban/pipeline/L40022_SAP002_SB209_uv.MS]
skymodel = /home/jswinban/pipeline/lsc.skymodel
working_dir = /home/jswinban/pipeline
output = /home/jswinban/pipeline/L40022_SAP002.img

# Per-subband NDPPP settings
ndppp.initscript = /home/jswinban/sw/lofarinit.sh
ndppp.parset.msin.autoweight = true
ndppp.parset.msin.datacolumn=DATA
ndppp.parset.msout.datacolumn=DATA
ndppp.parset.msin.startchan=2
ndppp.parset.msin.nchan=60
ndppp.parset.uselogger = True
ndppp.parset.steps=[preflag, aoflagger, average]
ndppp.parset.preflag.type = preflagger
ndppp.parset.preflag.corrtype=auto
ndppp.parset.aoflagger.type = aoflagger
ndppp.parset.aoflagger.timewindow=0
ndppp.parset.aoflagger.pulsar=F
ndppp.parset.aoflagger.pedantic=F
ndppp.parset.aoflagger.overlapperc = 0
ndppp.parset.aoflagger.overlapmax = 0
ndppp.parset.aoflagger.memoryperc = 50
ndppp.parset.aoflagger.memorymax=0
ndppp.parset.aoflagger.keepstatistics=T
ndppp.parset.aoflagger.autocorr=F
ndppp.parset.aoflagger.count.save=FALSE
ndppp.parset.aoflagger.count.path=-
ndppp.parset.average.type=squash
ndppp.parset.average.timestep=10
ndppp.parset.average.freqstep=60

# Combining subbands
combine.initscript = /home/jswinban/sw/lofarinit.sh
combine.parset.msin.missingdata=true
combine.parset.msin.orderms=false
combine.parset.msin.datacolumn=CORRECTED_DATA
combine.parset.msin.baseline=[CR]S*&
combine.parset.steps=[]

# Bad sations
badstations.initscript = /home/jswinban/sw/lofarinit.sh

# BBS settings
bbs.initscript = /home/jswinban/sw/lofarinit.sh
bbs.parset.Strategy.InputColumn = DATA
bbs.parset.Strategy.ChunkSize = 0
bbs.parset.Strategy.Baselines = [CR]S*&
bbs.parset.Strategy.UseSolver = F
bbs.parset.Strategy.Correlations = []
bbs.parset.Strategy.Steps = [solve,correct]
bbs.parset.Step.solve.Operation = SOLVE
bbs.parset.Step.solve.Model.Sources = []
bbs.parset.Step.solve.Model.Cache.Enable = T
bbs.parset.Step.solve.Model.Gain.Enable = T
bbs.parset.Step.solve.Model.Beam.Enable = T
bbs.parset.Step.solve.Solve.Parms = ["Gain:0:0:*","Gain:1:1:*"]
bbs.parset.Step.solve.Solve.ExclParms = []
bbs.parset.Step.solve.Solve.CalibrationGroups = []
bbs.parset.Step.solve.Solve.CellSize.Freq = 0
bbs.parset.Step.solve.Solve.CellSize.Time = 1
bbs.parset.Step.solve.Solve.CellChunkSize = 20
bbs.parset.Step.solve.Solve.UVRange = []
bbs.parset.Step.solve.Solve.PropagateSolutions = T
bbs.parset.Step.solve.Solve.Options.MaxIter = 0
bbs.parset.Step.solve.Solve.Options.EpsValue = 1e-4
bbs.parset.Step.solve.Solve.Options.EpsDerivative = 1e-4
bbs.parset.Step.solve.Solve.Options.ColFactor = 1e-9
bbs.parset.Step.solve.Solve.Options.LMFactor = 1
bbs.parset.Step.solve.Solve.Options.BalancedEqs = F
bbs.parset.Step.solve.Solve.Options.UseSVD = T
bbs.parset.Step.solve.Output.Column =
bbs.parset.Step.correct.Operation = CORRECT
bbs.parset.Step.correct.Model.Sources = []
bbs.parset.Step.correct.Model.Gain.Enable = T
bbs.parset.Step.correct.Model.Beam.Enable = T
bbs.parset.Step.correct.Output.Column = CORRECTED_DATA

# AWimager parameters
# (lifted from Antonia's tkp_imager.parset on lce051)
# awimager.XXX parameters are transplanted directly into an awimager parset
# others are used for calculations to generate the awimager parset
awimager.initscript = /home/jswinban/awimager/lofarinit.sh
awimager.noise_multiplier = 10        # float
awimager.maxbl = 3000                 # float
awimager.parset.robust = 0            # float
awimager.parset.wmax = 3000           # float
awimager.parset.cellsize = 90arcsec   # str
awimager.parset.npix = 512            # int
awimager.parset.wprojplanes = 129     # int
awimager.parset.niter = 100000        # int
awimager.parset.StepApplyElement = 1  # int
awimager.parset.timewindow = 300      # int
awimager.parset.padding = 1.3         # float
awimager.parset.cyclefactor = 1.0     # float
awimager.parset.data = CORRECTED_DATA # str
awimager.parset.nchan = 10            # int
awimager.parset.operation = csclean   # str
awimager.parset.stokes = I            # str
